apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana-logging
  namespace: default
  labels:
    k8s-app: kibana-logging
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: kibana-logging
  template:
    metadata:
      labels:
        k8s-app: kibana-logging
    spec:
      containers:
      - name: kibana-logging
        #image: docker.elastic.co/kibana/kibana:6.4.2
        image: docker.elastic.co/kibana/kibana:6.6.0
        resources:
          # need more cpu upon initialization, therefore burstable class
          limits:
            cpu: 1000m
            memory: 2.5Gi
          requests:
            cpu: 100m
            memory: 2.5Gi
        env:
          - name: ELASTICSEARCH_URL
            value: http://es:9200
          # use this if you want to use proxy
          #- name: SERVER_BASEPATH
          #  value: /api/v1/proxy/namespaces/kube-system/services/kibana-logging
          - name: XPACK_MONITORING_ENABLED
            value: "false"
          - name: XPACK_SECURITY_ENABLED
            value: "false"
        ports:
        - containerPort: 5601
          name: ui
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: kibana-logging
  namespace: default
  labels:
    k8s-app: kibana-logging
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/name: "Kibana"
  annotations:
    getambassador.io/config: |
      ---
      #apiVersion: ambassador/v1
      #kind:  Mapping
      #name:  kibana_mapping
      #prefix: /kibana
      #timeout_ms: 10000
      #service: kibana-logging.default:5601    
      ---
      #apiVersion: ambassador/v1
      #kind:  Mapping
      #name:  kibana_app_mapping
      #prefix: /app/kibana
      #timeout_ms: 10000
      #service: ambassador:31380
      #host_redirect: true
      #path_redirect: /kibana/app/kibana
    
spec:
  ports:
  - port: 5601
    protocol: TCP
    nodePort: 31601    
    targetPort: ui
  selector:
    k8s-app: kibana-logging
  type: NodePort
---
# An Ingress with 2 hosts and 3 endpoints
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: kibana-ingress
spec:
  rules:
  - host: kibana
    http:
      paths:
      - path: /
        backend:
          serviceName: kibana-logging
          servicePort: 5601
---
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: kibana
spec:
  hosts:
  - "*"
  gateways:
  - itzone-gateway
  http:
  - match:
    - uri:
        prefix: /kibana
    - uri:
        prefix: /app/kibana
    route:
    - destination:
        host: ambassador
        port:
          number: 80
                    