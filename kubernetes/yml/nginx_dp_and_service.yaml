apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: default
data:
  nginx.conf: |-   
    # MK CONF
    user  nginx;
    worker_processes  1;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;


    events {
    	worker_connections  1024;
    }


    http {
    	include       /etc/nginx/mime.types;
    	default_type  application/octet-stream;

    	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
        	  '$status $body_bytes_sent "$http_referer" '
        	  '"$http_user_agent" "$http_x_forwarded_for" '
        	  '"request postdata $request_body" '
        	  '"response postdata $resp_body" ';

    	access_log  /var/log/nginx/access.log2  main;

    	sendfile        on;
    	#tcp_nopush     on;

    	keepalive_timeout  65;

    	#gzip  on;

    	include /etc/nginx/conf.d/*.conf;
    	
    	
      upstream myproject {
    	server springbootmicroservice:9191;
      }

      server {
    	listen 80;
    	#server_name www.domain.com;
    	server_name nginx;
    	
    	
    	
        #lua_need_request_body on;

        set $resp_body "";
        #body_filter_by_lua '
        #    local resp_body = string.sub(ngx.arg[1], 1, 1000)
        #    ngx.ctx.buffered = (ngx.ctx.buffered or "") .. resp_body
        #    if ngx.arg[2] then
        #        ngx.var.resp_body = ngx.ctx.buffered
        #    end
        #';
    	
    	
    	
    	
    	location / {
    	  proxy_pass http://myproject;
    	}
      }    	
    	
    	
    	
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 80
        env:
        - name: SPRING_PROFILE
          value: "prd"
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
      volumes:
        - name: nginx-config
          configMap:
            # Provide the name of the ConfigMap containing the files you want
            # to add to the container
            name: nginx-config          
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  type: NodePort
  ports:
  - port: 80
#    nodePort: 30080
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: nginx
---
# An Ingress with 2 hosts and 3 endpoints
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: nginx-ingress
  annotations:
    ingress.kubernetes.io/enable-cors: "true"
    ingress.kubernetes.io/rewrite-target: /  
spec:
  rules:
  - host: nginx
    http:
      paths:
      - path: /
        backend:
          serviceName: nginx
          servicePort: 80
