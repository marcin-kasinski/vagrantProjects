kind: ConfigMap
metadata:
  name: fluentd-shipper-cm
  namespace: default
apiVersion: v1
data:
  fluent.conf: |-
    #@include systemd.conf
    @include myapps.conf
    #@include kubernetes.conf
    @include kafka.conf
---
kind: ConfigMap
metadata:
  name: fluentd-shipper-kubernetes-cm
  namespace: default
apiVersion: v1
data:
  kubernetes.conf: |-

    # MK
    
    
    # AUTOMATICALLY GENERATED
    # DO NOT EDIT THIS FILE DIRECTLY, USE /templates/conf/kubernetes.conf.erb
    
    <match fluent.**>
      @type null
    </match>
    
    <source>
      @type tail
      @id in_tail_container_logs
      path /var/log/containers/*.log
      pos_file /var/log/fluentd-containers.log.pos
      # exclude my custom logs
      exclude_path /var/log/containers/springbootweb-*.log,/var/log/containers/springbootmicroservice-*.log,/var/log/containers/springbootrabbitmqlistener-*.log,/var/log/containers/springbootkafkalistener-*.log,/var/log/containers/springbootzipkin-*.log
      tag kubernetes.*
      read_from_head true
      <parse>
        @type json
        time_format %Y-%m-%dT%H:%M:%S.%NZ
      </parse>
    </source>
    
    <source>
      @type tail
      @id in_tail_minion
      path /var/log/salt/minion
      pos_file /var/log/fluentd-salt.pos
      tag salt
      <parse>
        @type regexp
        expression /^(?<time>[^ ]* [^ ,]*)[^\[]*\[[^\]]*\]\[(?<severity>[^ \]]*) *\] (?<message>.*)$/
        time_format %Y-%m-%d %H:%M:%S
      </parse>
    </source>
    
    <source>
      @type tail
      @id in_tail_startupscript
      path /var/log/startupscript.log
      pos_file /var/log/fluentd-startupscript.log.pos
      tag startupscript
      <parse>
        @type syslog
      </parse>
    </source>
    
    <source>
      @type tail
      @id in_tail_docker
      path /var/log/docker.log
      pos_file /var/log/fluentd-docker.log.pos
      tag docker
      <parse>
        @type regexp
        expression /^time="(?<time>[^)]*)" level=(?<severity>[^ ]*) msg="(?<message>[^"]*)"( err="(?<error>[^"]*)")?( statusCode=($<status_code>\d+))?/
      </parse>
    </source>
    
    <source>
      @type tail
      @id in_tail_etcd
      path /var/log/etcd.log
      pos_file /var/log/fluentd-etcd.log.pos
      tag etcd
      <parse>
        @type none
      </parse>
    </source>
    
    <source>
      @type tail
      @id in_tail_kubelet
      multiline_flush_interval 5s
      path /var/log/kubelet.log
      pos_file /var/log/fluentd-kubelet.log.pos
      tag kubelet
      <parse>
        @type kubernetes
      </parse>
    </source>
    
    <source>
      @type tail
      @id in_tail_kube_proxy
      multiline_flush_interval 5s
      path /var/log/kube-proxy.log
      pos_file /var/log/fluentd-kube-proxy.log.pos
      tag kube-proxy
      <parse>
        @type kubernetes
      </parse>
    </source>
    
    <source>
      @type tail
      @id in_tail_kube_apiserver
      multiline_flush_interval 5s
      path /var/log/kube-apiserver.log
      pos_file /var/log/fluentd-kube-apiserver.log.pos
      tag kube-apiserver
      <parse>
        @type kubernetes
      </parse>
    </source>
    
    <source>
      @type tail
      @id in_tail_kube_controller_manager
      multiline_flush_interval 5s
      path /var/log/kube-controller-manager.log
      pos_file /var/log/fluentd-kube-controller-manager.log.pos
      tag kube-controller-manager
      <parse>
        @type kubernetes
      </parse>
    </source>
    
    <source>
      @type tail
      @id in_tail_kube_scheduler
      multiline_flush_interval 5s
      path /var/log/kube-scheduler.log
      pos_file /var/log/fluentd-kube-scheduler.log.pos
      tag kube-scheduler
      <parse>
        @type kubernetes
      </parse>
    </source>
    
    <source>
      @type tail
      @id in_tail_rescheduler
      multiline_flush_interval 5s
      path /var/log/rescheduler.log
      pos_file /var/log/fluentd-rescheduler.log.pos
      tag rescheduler
      <parse>
        @type kubernetes
      </parse>
    </source>
    
    <source>
      @type tail
      @id in_tail_glbc
      multiline_flush_interval 5s
      path /var/log/glbc.log
      pos_file /var/log/fluentd-glbc.log.pos
      tag glbc
      <parse>
        @type kubernetes
      </parse>
    </source>
    
    <source>
      @type tail
      @id in_tail_cluster_autoscaler
      multiline_flush_interval 5s
      path /var/log/cluster-autoscaler.log
      pos_file /var/log/fluentd-cluster-autoscaler.log.pos
      tag cluster-autoscaler
      <parse>
        @type kubernetes
      </parse>
    </source>
    
    # Example:
    # 2017-02-09T00:15:57.992775796Z AUDIT: id="90c73c7c-97d6-4b65-9461-f94606ff825f" ip="104.132.1.72" method="GET" user="kubecfg" as="<self>" asgroups="<lookup>" namespace="default" uri="/api/v1/namespaces/default/pods"
    # 2017-02-09T00:15:57.993528822Z AUDIT: id="90c73c7c-97d6-4b65-9461-f94606ff825f" response="200"
    <source>
      @type tail
      @id in_tail_kube_apiserver_audit
      multiline_flush_interval 5s
      path /var/log/kubernetes/kube-apiserver-audit.log
      pos_file /var/log/kube-apiserver-audit.log.pos
      tag kube-apiserver-audit
      <parse>
        @type multiline
        format_firstline /^\S+\s+AUDIT:/
        # Fields must be explicitly captured by name to be parsed into the record.
        # Fields may not always be present, and order may change, so this just looks
        # for a list of key="\"quoted\" value" pairs separated by spaces.
        # Unknown fields are ignored.
        # Note: We can't separate query/response lines as format1/format2 because
        #       they don't always come one after the other for a given query.
        format1 /^(?<time>\S+) AUDIT:(?: (?:id="(?<id>(?:[^"\\]|\\.)*)"|ip="(?<ip>(?:[^"\\]|\\.)*)"|method="(?<method>(?:[^"\\]|\\.)*)"|user="(?<user>(?:[^"\\]|\\.)*)"|groups="(?<groups>(?:[^"\\]|\\.)*)"|as="(?<as>(?:[^"\\]|\\.)*)"|asgroups="(?<asgroups>(?:[^"\\]|\\.)*)"|namespace="(?<namespace>(?:[^"\\]|\\.)*)"|uri="(?<uri>(?:[^"\\]|\\.)*)"|response="(?<response>(?:[^"\\]|\\.)*)"|\w+="(?:[^"\\]|\\.)*"))*/
        time_format %Y-%m-%dT%T.%L%Z
      </parse>
    </source>
    
    <filter kubernetes.**>
      @type kubernetes_metadata
      @id filter_kube_metadata
    </filter>

---
kind: ConfigMap
metadata:
  name: fluentd-shipper-myapps-cm
  namespace: default
apiVersion: v1
data:
  myapps.conf: |-
    #<match fluent.**>
    #  @type null
    #</match>

    <source>
      @type tail
      @id in_tail_springboot_container_logs
      #path /var/log/containers/*.log
      #path /var/log/containers/springbootweb-*.log,/var/log/containers/springbootmicroservice-*.log,/var/log/containers/springbootrabbitmqlistener-*.log,/var/log/containers/springbootkafkalistener-*.log,/var/log/containers/springbootzipkin-*.log
      path /var/log/containers/springbootrabbitmqlistener-*.log
      pos_file /var/log/fluentd-springboot-containers.log.pos
      #add path to record
      #path_key tailed_path
      #format1 /(?<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d{3})  (?<level>INFO|ERROR|WARN|TRACE|DEBUG|FATAL)\s+\[(?<app>[^\,]+),(?<zipkintraceid>[^\,]*),(?<zipkinspanid>[^\,]*),(?<zipkinsent>[^\]]*)] (?<someid>[0-9]+) --- \[(?<thread>[^\]]+)] (?<classname>[^\ ]+)\s+\: (?<text>.*)/
      #format_firstline /\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d{3}/
      tag springboot.*
      read_from_head true
      keep_time_key true
      <parse>
        @type json
        time_format %Y-%m-%dT%H:%M:%S.%NZ
      </parse>
    </source>
    
    <filter springboot.**>
      @type kubernetes_metadata
      @id filter_springboot_kube_metadata
    </filter>
    
    
    #for debug only
    #<match springboot.**>
    #   @type copy
    #  <store>
    #    @type stdout
    #  </store>    
    #</match>
    
    
---
kind: ConfigMap
metadata:
  name: fluentd-shipper-kafka-cm
  namespace: default
apiVersion: v1
data:
  kafka.conf: |-
    #<match springboot.**>
    #<match **>
    <match springboot.**>
       @type copy
      <store>
        @type stdout
      </store>    
    
      <store>
    
      #@type kafka_buffered
      @type kafka2
      @id out_kafka_springboot
    
      brokers "#{ENV['FLUENT_KAFKA_BROKERS']}"
    
      default_topic "#{ENV['FLUENT_KAFKA_DEFAULT_TOPIC'] || nil}"
      default_partition_key "#{ENV['FLUENT_KAFKA_DEFAULT_PARTITION_KEY'] || nil}"
      default_message_key "#{ENV['FLUENT_KAFKA_DEFAULT_MESSAGE_KEY'] || nil}"
      output_data_type "#{ENV['FLUENT_KAFKA_OUTPUT_DATA_TYPE'] || 'json'}"
      output_include_tag "#{ENV['FLUENT_KAFKA_OUTPUT_INCLUDE_TAG'] || false}"
      output_include_time "#{ENV['FLUENT_KAFKA_OUTPUT_INCLUDE_TIME'] || false}"
      exclude_topic_key "#{ENV['FLUENT_KAFKA_EXCLUDE_TOPIC_KEY'] || false}"
      exclude_partition_key "#{ENV['FLUENT_KAFKA_EXCLUDE_PARTITION_KEY'] || false}"
      get_kafka_client_log "#{ENV['FLUENT_KAFKA_GET_KAFKA_CLIENT_LOG'] || false}"

      <format>
        @type json
      </format>


      # See fluentd document for buffer related parameters: http://docs.fluentd.org/articles/buffer-plugin-overview
      # Buffer chunk key should be same with topic_key. If value is not found in the record, default_topic is used.
      <buffer topic>
        flush_interval 10s
      </buffer>

    
      # ruby-kafka producer options
      max_send_retries "#{ENV['FLUENT_KAFKA_MAX_SEND_RETRIES'] || 1}"
      required_acks "#{ENV['FLUENT_KAFKA_REQUIRED_ACKS'] || -1}"
      ack_timeout "#{ENV['FLUENT_KAFKA_ACK_TIMEOUT'] || nil}"
      compression_codec "#{ENV['FLUENT_KAFKA_COMPRESSION_CODEC'] || nil}"
      max_send_limit_bytes "#{ENV['FLUENT_KAFKA_MAX_SEND_LIMIT_BYTES'] || nil}"
      discard_kafka_delivery_failed "#{ENV['FLUENT_KAFKA_DISCARD_KAFKA_DELIVERY_FAILED'] || false}"
      
      </store>
      
    </match>






    <match kubernetes.**>
       @type copy
      #<store>
      #  @type stdout
      #</store>    
    
      <store>
    
      @type kafka_buffered
      @id out_kafka_kubernetes
    
      brokers "#{ENV['FLUENT_KAFKA_BROKERS']}"
    
      default_topic fluentd-kubernetes-logs
      default_partition_key "#{ENV['FLUENT_KAFKA_DEFAULT_PARTITION_KEY'] || nil}"
      default_message_key "#{ENV['FLUENT_KAFKA_DEFAULT_MESSAGE_KEY'] || nil}"
      output_data_type "#{ENV['FLUENT_KAFKA_OUTPUT_DATA_TYPE'] || 'json'}"
      output_include_tag "#{ENV['FLUENT_KAFKA_OUTPUT_INCLUDE_TAG'] || false}"
      output_include_time "#{ENV['FLUENT_KAFKA_OUTPUT_INCLUDE_TIME'] || false}"
      exclude_topic_key "#{ENV['FLUENT_KAFKA_EXCLUDE_TOPIC_KEY'] || false}"
      exclude_partition_key "#{ENV['FLUENT_KAFKA_EXCLUDE_PARTITION_KEY'] || false}"
      get_kafka_client_log "#{ENV['FLUENT_KAFKA_GET_KAFKA_CLIENT_LOG'] || false}"
    
      # ruby-kafka producer options
      max_send_retries "#{ENV['FLUENT_KAFKA_MAX_SEND_RETRIES'] || 1}"
      required_acks "#{ENV['FLUENT_KAFKA_REQUIRED_ACKS'] || -1}"
      ack_timeout "#{ENV['FLUENT_KAFKA_ACK_TIMEOUT'] || nil}"
      compression_codec "#{ENV['FLUENT_KAFKA_COMPRESSION_CODEC'] || nil}"
      max_send_limit_bytes "#{ENV['FLUENT_KAFKA_MAX_SEND_LIMIT_BYTES'] || nil}"
      discard_kafka_delivery_failed "#{ENV['FLUENT_KAFKA_DISCARD_KAFKA_DELIVERY_FAILED'] || false}"
      
      </store>
      
    </match>




---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd-shipper
  namespace: default

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: fluentd-shipper
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - list
  - watch

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: fluentd-shipper
roleRef:
  kind: ClusterRole
  name: fluentd-shipper
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: fluentd-shipper
  namespace: default
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: fluentd-shipper
  namespace: default
  labels:
    k8s-app: fluentd-shipper
    app: fluentd-shipper
    version: v1
    kubernetes.io/cluster-service: "true"
spec:
  template:
    metadata:
      labels:
        k8s-app: fluentd-shipper
        version: v1
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccount: fluentd-shipper
      serviceAccountName: fluentd-shipper
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      containers:
      - name: fluentd-shipper
        image: fluent/fluentd-kubernetes-daemonset:v1.2-debian-kafka
        #command: ["/bin/sh"]
        #args: ["-c", "echo MK;gem install fluent-plugin-grok-parser;  /fluentd/entrypoint.sh"]
        env:
          - name: FLUENT_UID
            value: "0"
          - name: FLUENT_KAFKA_COMPRESSION_CODEC
            value: "gzip"
          - name: FLUENT_KAFKA_MAX_SEND_LIMIT_BYTES
            value: "1000000"
          - name: FLUENT_KAFKA_DEFAULT_TOPIC
            value: "fluentd-springboot-logs"
          - name: FLUENT_KAFKA_BROKERS
            value: "kafka-0.k-hs.default.svc.cluster.local:9092,kafka-1.k-hs.default.svc.cluster.local:9092,kafka-2.k-hs.default.svc.cluster.local:9092"
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: config-fluentd-shipper-kubernetes-cm
          mountPath: /fluentd/etc/kubernetes.conf
          subPath: kubernetes.conf
        - name: config-fluentd-shipper-kafka-cm
          mountPath: /fluentd/etc/kafka.conf
          subPath: kafka.conf        
        - name: config-fluentd-shipper-myapps-cm
          mountPath: /fluentd/etc/myapps.conf
          subPath: myapps.conf
        - name: config-fluentd-shipper-cm
          mountPath: /fluentd/etc/fluent.conf
          subPath: fluent.conf
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
      terminationGracePeriodSeconds: 30
      volumes:
      - name: config-fluentd-shipper-kubernetes-cm
        configMap:
          name: fluentd-shipper-kubernetes-cm
      - name: config-fluentd-shipper-kafka-cm
        configMap:
          name: fluentd-shipper-kafka-cm
      - name: config-fluentd-shipper-myapps-cm
        configMap:
          name: fluentd-shipper-myapps-cm
      - name: config-fluentd-shipper-cm
        configMap:
          name: fluentd-shipper-cm
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
