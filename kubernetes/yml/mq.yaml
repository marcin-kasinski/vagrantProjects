kind: ConfigMap
metadata:
  name: mq-conf-mqsc-cm
apiVersion: v1
data:
  mqconf.mqsc: |-

    DEFINE CHANNEL(SYSTEM.ADMIN.SVRCONN) CHLTYPE(SVRCONN) TRPTYPE(TCP) MCAUSER('mqm') REPLACE    
    
    SET CHLAUTH(MKSVRCONN) TYPE(blockuser) ACTION(replace) DESCR('Rule to override *MQADMIN blockuser on this channel') USERLIST('nobody')  
    SET CHLAUTH(SYSTEM.ADMIN.SVRCONN) TYPE(blockuser) ACTION(replace) DESCR('Rule to override *MQADMIN blockuser on this channel') USERLIST('nobody')  
    

    ALTER AUTHINFO(SYSTEM.DEFAULT.AUTHINFO.IDPWOS) AUTHTYPE(IDPWOS) CHCKCLNT(OPTIONAL)
    ALTER AUTHINFO(DEV.AUTHINFO) AUTHTYPE(IDPWOS) CHCKCLNT(OPTIONAL)
    
    REFRESH SECURITY TYPE(CONNAUTH)

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mq
  labels:
    app: mq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mq
  template:
    metadata:
      labels:
        app: mq
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/scheme: "http"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "9157"  
    spec:
      containers:
      - name: mq
        image: ibmcom/mq
        imagePullPolicy: Always
        ports:
        - name: mq
          containerPort: 1414
        - name: web
          containerPort: 9443
        env:
        - name: LICENSE
          value: "accept"          
        - name: MQ_QMGR_NAME
          value: "QM1"          
        - name: MQ_ADMIN_PASSWORD
          value: "admin"          
        - name: MQ_ENABLE_METRICS
          value: "true"
        volumeMounts:
        - name: config-mq-conf-mqsc-cm
          mountPath: /etc/mqm/mqconf.mqsc
          subPath: mqconf.mqsc
      volumes:
        - name: config-mq-conf-mqsc-cm
          configMap:
            name: mq-conf-mqsc-cm
---
apiVersion: v1
kind: Service
metadata:
  name: mq
  annotations:
spec:
  type: NodePort
  ports:
  - port: 1414
    nodePort: 30014
    targetPort: 1414
    protocol: TCP
    name: http
  selector:
    app: mq
---
apiVersion: v1
kind: Service
metadata:
  name: mqwebconsole
  annotations:
spec:
  type: NodePort
  ports:
  - port: 9443
    #nodePort: 30070
    targetPort: 9443
    protocol: TCP
    name: http
  selector:
    app: mq
---
# An Ingress with 2 hosts and 3 endpoints
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: mq-ingress
  annotations:
    ingress.kubernetes.io/enable-cors: "true"
    ingress.kubernetes.io/rewrite-target: /  
spec:
  rules:
  - host: mq
    http:
      paths:
      - path: /
        backend:
          serviceName: mqwebconsole
          servicePort: 9443
---
