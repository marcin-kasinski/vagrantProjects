apiVersion: v1
kind: Service
metadata:
  name: zk-hs
  labels:
    app: zookeeper
spec:
  ports:
  - port: 2888
    name: server
  - port: 3888
    name: leader-election
  - port: 2181
    name: client    
  - port: 8080
    name: jmxagent
  clusterIP: None
  selector:
    app: zookeeper
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zk
spec:
  serviceName: "zk-hs"
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
        kubernetes.io/name: "zookeeper"
        tier: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/scheme: "http"
        prometheus.io/path: "/"
        prometheus.io/port: "8080"
    spec:
      containers:
      - name: zookeeper
        image: marcinkasinski/zookeepercluster
        imagePullPolicy: Always        
        ports:
        - containerPort: 2181
          name: client
        - containerPort: 2888
          name: server
        - containerPort: 3888
          name: leader-election
        volumeMounts:
        - mountPath: /datalog/zookeeper
          name: zookeeper-logs
        - mountPath: /data/zookeeper
          name: zookeeper-data
        env:
        - name: "ZOOKEEPER_NODES"
          value: "server.1=zk-0.zk-hs.default.svc.cluster.local:2888:3888;server.2=zk-1.zk-hs.default.svc.cluster.local:2888:3888;server.3=zk-2.zk-hs.default.svc.cluster.local:2888:3888"
      volumes:
      - name: zookeeper-logs
        emptyDir: {}
      - name: zookeeper-data
        emptyDir: {}        