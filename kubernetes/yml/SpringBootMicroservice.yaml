apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: springbootmicroservice
  labels:
    app: springbootmicroservice  
spec:
  serviceName: "springbootmicroservice-hs"
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel  
  selector:
    matchLabels:
      app: springbootmicroservice    
  template:
    metadata:
      labels:
        app: springbootmicroservice
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/scheme: "http"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "9191"        
    spec:
      initContainers:
      - name: init-springbootmicroservice-monitoring
        image: openjdk:8
        command: ['sh', '-c', 'apt update && apt install -y netcat && echo "Waiting monitoring to launch"  && while ! nc -z monitoring-influxdb.kube-system.svc.cluster.local 8086; do   echo "waiting..." ; sleep 5 ; done ;  curl -POST http://monitoring-influxdb.kube-system.svc.cluster.local:8086/query --data-urlencode "q=CREATE DATABASE metrics"']
      containers:
      - name: springbootmicroservice
        image: marcinkasinski/springbootmicroservice
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
            httpHeaders:
            - name: X-Custom-Header
              value: Awesome
          initialDelaySeconds: 20
          periodSeconds: 10
        ports:
        - name: http-port
          containerPort: 9191
        env:
        - name: SPRING_PROFILE
          value: "prd"
        - name: KAFKA_BROKER_NODES
          value: "kafka-0.k-hs.default.svc.cluster.local:9092,kafka-1.k-hs.default.svc.cluster.local:9092,kafka-2.k-hs.default.svc.cluster.local:9092"
        - name: JAVA_OPTS
          value: "-Dlogging.level.zipkin=DEBUG -Dlogging.level.zipkin2=DEBUG -Dlogging.level.=DEBUG -Dlogging.level.root=DEBUG"
---
apiVersion: v1
kind: Service
metadata:
  name: springbootmicroservice-cs
  labels:
    app: springbootmicroservice
spec:
  type: NodePort
  ports:
  - port: 9191
    targetPort: 9191
    name: client
  selector:
    app: springbootmicroservice
---
apiVersion: v1
kind: Service
metadata:
  name: springbootmicroservice-hs
  labels:
    app: springbootmicroservice
spec:
  ports:
  - port: 9191
    targetPort: 9191
    name: server
  clusterIP: None
  selector:
    app: springbootmicroservice
---

# An Ingress with 2 hosts and 3 endpoints
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: springbootmicroservice-ingress
  annotations:
    ingress.kubernetes.io/enable-cors: "true"
    ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: springbootmicroservice
    http:
      paths:
      - path: /
        backend:
          serviceName: springbootmicroservice-cs
          servicePort: 9191
