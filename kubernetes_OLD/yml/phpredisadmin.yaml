apiVersion: apps/v1
kind: Deployment
metadata:
  name: phpredisadmin
  labels:
    app: phpredisadmin  
spec:
  replicas: 1
  selector:
    matchLabels:
      app: phpredisadmin
  template:
    metadata:
      labels:
        app: phpredisadmin
    spec:
      containers:
      - name: phpredisadmin
        image: erikdubbelboer/phpredisadmin
        ports:
        - name: phpredisadmin
          containerPort: 80
        env:
        - name: REDIS_1_HOST
          value: "redis-0.redis-hs.default.svc.cluster.local"
        - name: REDIS_1_NAME
          value: "MyRedis0"
        - name: REDIS_2_HOST
          value: "redis-1.redis-hs.default.svc.cluster.local"
        - name: REDIS_2_NAME
          value: "MyRedis1"
        - name: REDIS_3_HOST
          value: "redis-2.redis-hs.default.svc.cluster.local"
        - name: REDIS_3_NAME
          value: "MyRedis2"
        - name: REDIS_4_HOST
          value: "redis-3.redis-hs.default.svc.cluster.local"
        - name: REDIS_4_NAME
          value: "MyRedis3"
        - name: REDIS_5_HOST
          value: "redis-4.redis-hs.default.svc.cluster.local"
        - name: REDIS_5_NAME
          value: "MyRedis4"
        - name: REDIS_6_HOST
          value: "redis-5.redis-hs.default.svc.cluster.local"
        - name: REDIS_6_NAME
          value: "MyRedis5"
---
apiVersion: v1
kind: Service
metadata:
  name: phpredisadmin
spec:
  type: NodePort
  ports:
  - port: 80
    #nodePort: 30808
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: phpredisadmin
---
# An Ingress with 2 hosts and 3 endpoints
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: phpredisadmin-ingress
spec:
  rules:
  - host: phpredisadmin
    http:
      paths:
      - path: /
        backend:
          serviceName: phpredisadmin
          servicePort: 80
