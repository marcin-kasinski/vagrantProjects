#echo "" >a.yaml && nano a.yaml && kubectl apply -f a.yaml

---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: manual
  namespace: airflow
provisioner: kubernetes.io/no-provisioner
#volumeBindingMode: WaitForFirstConsumer
volumeBindingMode: Immediate
mountOptions:
  - debug
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: airflow-dags
  namespace: airflow
provisioner: kubernetes.io/no-provisioner
#volumeBindingMode: WaitForFirstConsumer
volumeBindingMode: Immediate
mountOptions:
  - debug
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: airflow-postgres-pv
  namespace: airflow
spec:
  storageClassName: manual
  capacity:
    storage: 50Mi
  accessModes:
  - ReadWriteOnce
  hostPath:
    path: /tmp/mk
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: airflow-dags
  namespace: airflow
spec:
  storageClassName: airflow-dags
  capacity:
    storage: 50Mi
  accessModes:
  - ReadWriteOnce
  hostPath:
    path: /vagrant/conf/airflowdags
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: airflow-dags
  namespace: airflow
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Mi
  storageClassName: airflow-dags
  volumeName: airflow-dags   

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: airflow-ingress
  namespace: airflow  
  annotations:
    ingress.kubernetes.io/enable-cors: "true"
    ingress.kubernetes.io/rewrite-target: /  
spec:
  rules:
  - host: airflow
    http:
      paths:
      - path: /
        backend:
          serviceName: airflow-web
          servicePort: 8080  
  