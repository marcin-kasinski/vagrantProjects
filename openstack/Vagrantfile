# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.require_version ">= 1.6.0"

$initscript = <<SCRIPT
     
		IP=$1
		SCRIPT=$2
	
		echo $IP
		echo $SCRIPT
	
		
		cp /vagrant/scripts/$SCRIPT $SCRIPT
		
		
		#win2linux
		sed -i -e 's/\r//g' ~/$SCRIPT
		
		chmod u+x ~/$SCRIPT
		~/$SCRIPT $IP
	
	


SCRIPT





boxes = [
    {
        :name => "openstackmaster",
#        :box => "najoy/os-pike-aio",
        :box => "ubuntu/xenial64",       
        :interface => "enp3s0",
        :mac=> "5CA1AB1E0001",
        :ip => "192.168.33.10",
        :mem => "24576",
#        :mem => "12228",
#        :mem => "8192",
        :cpu => "2",
        :lvm_enable => true,
        :initscript => "controller.sh"
    },
    {
        :name => "node1",
        :box => "najoy/openstack-pike-compute",
#        :box => "ubuntu/xenial64",       
        :interface => "enp3s0",
        :mac=> "5CA1AB1E0002",
        :ip => "192.168.33.11",
        :mem => "24576",
#        :mem => "8192",
        :cpu => "1",
        :lvm_enable => false,
        :initscript => "node_manual.sh"
        
        
    },
    {
        :name => "node2",
        :box => "najoy/openstack-pike-compute",
#        :box => "ubuntu/xenial64",       
        :interface => "enp3s0",
        :mac=> "5CA1AB1E0002",
        :ip => "192.168.33.12",
        :mem => "20480",
#        :mem => "8192",
        :cpu => "1",
        :lvm_enable => false,
        :initscript => "node_manual.sh"
        
        
    }
]

Vagrant.configure(2) do |config|

#  config.vm.box = "ubuntu/xenial64"
#  config.vm.box = "ubuntu/trusty64"
#  config.vm.box = "bento/ubuntu-16.04"
#  config.vm.box = "najoy/os-pike-aio"

  #config.vm.box_version = "20171212.0.0"

  boxes.each do |opts|
      config.vm.define opts[:name] do |config|
      
        config.vm.box = opts[:box]
      
        config.vm.hostname = opts[:name]
        #config.vm.synced_folder opts[:share_folder_host], ""
        
        #config.vm.network :forwarded_port, host: 2222, guest: 22
        #config.ssh.username = "ubuntu"
        #config.ssh.password = "379a8188cba8c5e64b9a429f"



        config.vm.provider "virtualbox" do |v|
          v.customize ["modifyvm", :id, "--memory", opts[:mem]]
          v.customize ["modifyvm", :id, "--cpus", opts[:cpu]]
          #v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
          #v.customize ['modifyvm', :id, '--natnet1', '192.168.222.0/24']
          v.customize ["modifyvm", :id, "--nicpromisc1", "allow-all"]
          v.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
          v.customize ["modifyvm", :id, "--nicpromisc3", "allow-all"]

          v.name = opts[:name]
        end

        #config.vm.network "public_network", bridge: opts[:interface], type: "dhcp" , mac: opts[:mac]        
        #config.vm.network "public_network", bridge: opts[:interface] , mac: opts[:mac], ip: opts[:ip]
        
        #ponizsz dziala dla sieci prywatnej         
        config.vm.network "private_network", ip: opts[:ip],  bridge: opts[:interface],mac: opts[:mac]
#       config.vm.network "private_network", ip: "172.24.4.2",:netmask => "255.255.255.0", :auto_config => false
        config.vm.network "public_network", auto_config: false,  bridge: "enp3s0"


		# configure a persistent storage for mysql data
        config.persistent_storage.enabled = opts[:lvm_enable]
        config.persistent_storage.location = "/vagrantprojects/openstackmaster.vdi"
        config.persistent_storage.size = 90000 # 90GB
        #config.persistent_storage.mountname = 'mysql'
        config.persistent_storage.filesystem = 'ext4'
        #config.persistent_storage.mountpoint = '/var/lib/mysql'
        config.persistent_storage.volgroupname = 'MKmyvolgroup'
        config.persistent_storage.partition = false
        # sdb dla piko sdc dla ubuntu
		config.persistent_storage.diskdevice = '/dev/sdc'



      end
  end






  boxes.each do |opts|
    config.vm.define opts[:name] do |config|
      config.vm.provision "shell" do |s|
        s.privileged = false
        s.inline = $initscript
        s.args = [opts[:ip] , opts[:initscript]]
      end


# default router
  config.vm.provision "shell",
    run: "always",
    inline: "sudo route add -net 192.168.1.0 netmask 255.255.255.0 gw 192.168.33.1"

# delete default gw on enp0s3 
  config.vm.provision "shell",
    run: "always",
    inline: "sudo route del default gw 10.0.2.2 && sudo route add default gw 192.168.33.1"






    end
  end






#tu dla pojedynczych maszym eventualnie
   config.vm.define  "openstackmaster" do |config|
     config.vm.network "forwarded_port", guest: 80, host: 8080


    end








#tu dla pojedynczych maszym eventualnie
#   config.vm.define  "openstackmaster" do |config|
#     config.vm.network "forwarded_port", guest: 80, host: 8080
#      config.vm.provision "shell" do |s|
#        s.inline = $masterscript
#        s.privileged = false
#        s.args = "192.168.42.11"
#      end
#    end







end
