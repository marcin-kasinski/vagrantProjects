# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.require_version ">= 1.6.0"

$initscript = <<SCRIPT
      echo initscript. I am provisioning...
      
      echo $USER
      echo ">>>>>>>>>>>>>>>>>>>>>>>>>>initscript machine provisioning "$1
      echo ">>>>>>>>>>>>>>>>>>>>>>>>>>initscript machine provisioning "$2
	
	


SCRIPT

$masterscript = <<SCRIPT

      echo I am provisioning master...
      
      echo $USER
      echo ">>>>>>>>>>>>>>>>>>>>>>>>>>machine provisioned "$1
	  sudo useradd -s /bin/bash -d /opt/stack -m stack
	  sudo apt-get install sudo -y || yum install -y sudo
	  #sudo echo "stack ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
	  
	  sudo sh -c "echo 'stack ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers"      
	  
	  
	  sudo apt-get install git -y || sudo yum install -y git
	  git clone https://git.openstack.org/openstack-dev/devstack

      #mkdir ~/.ssh
	  chmod 700 ~/.ssh
      echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyYjfgyPazTvGpd8OaAvtU2utL8W6gWC4JdRS1J95GhNNfQd657yO6s1AH5KYQWktcE6FO/xNUC2reEXSGC7ezy+sGO1kj9Limv5vrvNHvF1+wts0Cmyx61D2nQw35/Qz8BvpdJANL7VwP/cFI/p3yhvx2lsnjFE3hN8xRB2LtLUopUSVdBwACOVUmH2G+2BWMJDjVINd2DPqRIA4Zhy09KJ3O1Joabr0XpQL0yt/I9x8BVHdAx6l9U0tMg9dj5+tAjZvMAFfye3PJcYwwsfJoFxC8w/SLtqlFX7Ehw++8RtvomvuipLdmWCy+T9hIkl+gHYE4cS3OIqXH7f49jdJf jesse@spacey.local" >> ~/.ssh/authorized_keys
      
      cd /home/vagrant/devstack 
       
      #cp /vagrant/controller_local.conf /home/vagrant/devstack/local.conf 
      #cp /vagrant/localrc.password /home/vagrant/devstack/.localrc.password 
      
      echo HOST_IP=192.168.42.11 >> local.conf
      echo ADMIN_PASSWORD=secret >> .localrc.password
      echo DATABASE_PASSWORD=secret >> .localrc.password
      echo RABBIT_PASSWORD=secret >> .localrc.password
      echo SERVICE_PASSWORD=secret >> .localrc.password
      
      sudo chown -R stack:stack /home/vagrant/devstack
     
      #cd devstack
      #sudo su -c "./stack.sh" -s /bin/sh stack
 
      ############################ adding image ############################



      #source /home/vagrant/devstack/accrc/admin/admin
      #source /home/vagrant/devstack/openrc admin admin
      #export OS_PASSWORD=secret
      #export OS_AUTH_URL=http://192.168.42.11/identity/v3
      #export OS_IDENTITY_API_VERSION=3

      #cd /home/vagrant
       
      #openstack server list
            
      #wget http://cloud-images.ubuntu.com/xenial/current/xenial-server-cloudimg-amd64-disk1.img
      #openstack image create --disk-format qcow2 --container-format bare  --public --file /home/vagrant/xenial-server-cloudimg-amd64-disk1.img xenial-server-cloudimg-amd64
      
      #wget http://cloud.centos.org/centos/7/images/CentOS-7-x86_64-GenericCloud.qcow2
      #openstack image create --disk-format qcow2 --container-format bare  --public --file /home/vagrant/CentOS-7-x86_64-GenericCloud.qcow2 CentOS-7-x86_64-GenericCloud.qcow2
      
      #wget http://cdimage.debian.org/cdimage/openstack/current/debian-9.3.3-20180105-openstack-amd64.qcow2
      #openstack image create --container-format bare --disk-format qcow2 --file /home/vagrant/debian-9.3.3-20180105-openstack-amd64.qcow2 debian-9-openstack-amd64
      
      #wget https://download.fedoraproject.org/pub/fedora/linux/releases/27/CloudImages/x86_64/images/Fedora-Cloud-Base-27-1.6.x86_64.qcow2
      #openstack image create --container-format bare --disk-format qcow2 --file /home/vagrant/Fedora-Cloud-Base-27-1.6.x86_64.qcow2 Fedora-Cloud-Base-27-1.6.x86_64
      
       
      
SCRIPT

$nodescript = <<SCRIPT

      echo I am provisioning node...
      
      echo $USER
      echo ">>>>>>>>>>>>>>>>>>>>>>>>>>machine provisioned "$1
	  sudo useradd -s /bin/bash -d /opt/stack -m stack
	  sudo apt-get install sudo -y || yum install -y sudo
	  #sudo echo "stack ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
	  
	  sudo sh -c "echo 'stack ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers"      
	  
	  
	  sudo apt-get install git -y || sudo yum install -y git
	  git clone https://git.openstack.org/openstack-dev/devstack

      #mkdir ~/.ssh
	  chmod 700 ~/.ssh
      echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyYjfgyPazTvGpd8OaAvtU2utL8W6gWC4JdRS1J95GhNNfQd657yO6s1AH5KYQWktcE6FO/xNUC2reEXSGC7ezy+sGO1kj9Limv5vrvNHvF1+wts0Cmyx61D2nQw35/Qz8BvpdJANL7VwP/cFI/p3yhvx2lsnjFE3hN8xRB2LtLUopUSVdBwACOVUmH2G+2BWMJDjVINd2DPqRIA4Zhy09KJ3O1Joabr0XpQL0yt/I9x8BVHdAx6l9U0tMg9dj5+tAjZvMAFfye3PJcYwwsfJoFxC8w/SLtqlFX7Ehw++8RtvomvuipLdmWCy+T9hIkl+gHYE4cS3OIqXH7f49jdJf jesse@spacey.local" >> ~/.ssh/authorized_keys
      
      cd /home/vagrant/devstack 
       
      cp /vagrant/compute_local.conf /home/vagrant/devstack/local.conf 
      cp /vagrant/localrc.password /home/vagrant/devstack/.localrc.password 
      
      sudo chown -R stack:stack /home/vagrant/devstack
     
      sudo su -c "./stack.sh" -s /bin/sh stack
 
      echo ">>>>>>>>>>>>>>>>>>>>>>>>>>machine provisioning "$1  
  
SCRIPT


boxes = [
    {
        :name => "openstackmaster",
        :interface => "enp3s0",
        :mac=> "5CA1AB1E0001",
        :ip => "192.168.42.11",
        :mem => "8192",
        :cpu => "1",
        :initscript => "/vagrant/master.sh"
    },
    {
        :name => "openstacknode1",
        :interface => "enp3s0",
        :mac=> "5CA1AB1E0002",
        :ip => "192.168.42.12",
        :mem => "8192",
        :cpu => "1",
        :initscript => "/vagrant/node.sh"
    },
    {
        :name => "openstacknode2",
        :interface => "enp3s0",
        :mac=> "5CA1AB1E0003",
        :ip => "192.168.42.13",
        :mem => "8192",
        :cpu => "1",
        :initscript => "/vagrant/node.sh"
    }]

Vagrant.configure(2) do |config|

  config.vm.box = "ubuntu/xenial64"
#  config.vm.box = "ubuntu/trusty64"
#  config.vm.box = "bento/ubuntu-16.04"
  
  #config.vm.box_version = "20171212.0.0"

  boxes.each do |opts|
      config.vm.define opts[:name] do |config|
        config.vm.hostname = opts[:name]
        #config.vm.network :forwarded_port, host: 2222, guest: 22
        #config.ssh.username = "ubuntu"
        #config.ssh.password = "379a8188cba8c5e64b9a429f"

        config.vm.provider "virtualbox" do |v|
          v.customize ["modifyvm", :id, "--memory", opts[:mem]]
          v.customize ["modifyvm", :id, "--cpus", opts[:cpu]]
          v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
          v.customize ['modifyvm', :id, '--natnet1', '192.168.222.0/24']
          v.name = opts[:name]
        end

        #config.vm.network "public_network", bridge: opts[:interface], type: "dhcp" , mac: opts[:mac]        
        #config.vm.network "public_network", bridge: opts[:interface] , mac: opts[:mac], ip: opts[:ip]
        config.vm.network "private_network" ,  bridge: opts[:interface],mac: opts[:mac], ip: opts[:ip]
        
      end
  end






  boxes.each do |opts|
    config.vm.define opts[:name] do |config|
      config.vm.provision "shell" do |s|
        #s.privileged = false
        s.inline = $initscript
        s.args = [opts[:ip] , opts[:initscript]]
      end


# default router
#  config.vm.provision "shell",
#    run: "always",
#    inline: "sudo route add default gw 192.168.1.1"

# default router ipv6
#  config.vm.provision "shell",
#    run: "always",
#    inline: "#sudo route -A inet6 add default gw fe80::5ea1:abff:fe1e:1 dev enp0s8"

# delete default gw on enp0s3 
#  config.vm.provision "shell",
#    run: "always",
#    inline: "sudo route del default gw 10.0.2.2"



    end
  end





   config.vm.define  "openstackmaster" do |config|
     config.vm.network "forwarded_port", guest: 80, host: 8080
      config.vm.provision "shell" do |s|
        s.inline = $masterscript
        s.privileged = false
        s.args = "192.168.42.11"
      end
    end


   config.vm.define  "openstacknode1" do |config|

      config.vm.provision "shell" do |s|
        s.inline = $nodescript
        s.privileged = false
        s.args = "192.168.1.12"
      end
    end






end
